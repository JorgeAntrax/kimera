    @import '../base/_partials';
    //variables
    $button-background-color: $light !default;
    $button-border-color: rgba($black, 0.1) !default;
    $button-border-size: 1px !default;
    $button-border-radius: rem(3px);
    $button-circle: 1000em !default;
    $button-floating-position: 100% !default;
    $button-floating-shadow: 0 2px 5px -1px rgba($black, .1) !default;
    $button-floating-shadow-hover: 0 6px 15px -2px rgba($black, .1) !default;
    $button-hovered: 0 4 10em -2px rgba($black, 0.2) !default;
    $button-padding: rem($text-default / 2) rem($text-default - 1px) !default;
    //styles
    #{$name-button-module},
    .#{$name-button-module} {
        transition: all .1s ease-out;
        background-color: $button-background-color;
        border: 0;
        font-size: rem($text-default);
        outline: none;
        cursor: pointer;
        z-index: 1;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        vertical-align: top;
        user-select: none;
        border-radius: $button-border-radius;
        padding: $button-padding;
        position: relative;
        overflow: hidden;
        white-space: pre;
        &:hover {
            box-shadow: $button-hovered;
        }
        //Add the ripple effect in event click
        .ripple-container {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 50;
            .ripple-effect {
                display: block;
                position: absolute;
                transform: translate(-50%, -50%);
                opacity: 0;
                min-width: 0;
                min-height: 0;
                border-radius: 100%;
                background-color: $dark;
                box-shadow: 0 0 50px -10px rgba($black, 0.3);
                &.ripple-active {
                    animation: rippleEffect .4s ease-in;
                }
            }
        }
        &,
        a {
            color: inherit;
        }
        &.#{$class-rounded} {
            border-radius: $button-circle;
        }
        // block estyle button
        &.#{$class-block} {
            display: flex;
        }
        #{$name-icon-module} {
            width: auto;
            &:first-child:last-child {
                margin-left: rem(-$text-default);
                margin-right: rem(-$text-default);
            }
        }
        @each $class,
        $color in $colors {
            @if $class=='cloud' {}
            @else {
                &.is-#{$class} {
                    &,
                    &-outline {
                        border: $button-border-size solid $color;
                    }
                    &,
                    &-outline:hover {
                        background-color: $color;
                        @if ($class=='warning') or ($class=='light') {
                            color: $dark;
                        }
                        @else {
                            color: $cloud;
                        }
                    }
                    &-outline,
                    &-invert,
                    &-inverse:hover {
                        @if $class=='warning' {
                            color: $color;
                        }
                        @else {
                            color: $color;
                        }
                    }
                    &-invert,
                    &-inverse {
                        & .ripple-effect {
                            background-color: $color;
                        }
                    }
                    &[disabled] {
                        background-color: lighten($color, 25);
                    }
                }
            }
        }
        &[class*="-outline"],
        &[class*="-inverse"] {
            background-color: transparent;
        }
        &[class*="-inverse"] {
            border: 1px solid #fff;
            color: #fff;
        }
        &[class*="-invert"],
        &[class*="-inverse"]:hover {
            background-color: $cloud;
        }
        &.is {
            &-primary,
            &-info,
            &-success,
            &-warning,
            &-danger,
            &-black,
            &-dark {
                & .ripple-effect,
                &-outline .ripple-effect {
                    background-color: $cloud;
                }
            }
        }
        &[disabled],
        &[class$='-invert'] {
            border: none;
        }
        // Create a button floating
        &[type='floating'] {
            z-index: 40;
            margin: rem(5px);
            border-radius: $button-circle;
            box-shadow: $button-floating-shadow;
            &:hover {
                box-shadow: $button-floating-shadow-hover;
            }
            &.is-small {
                width: rem(32px);
                height: rem(32px);
            }
            & {
                width: rem(40px);
                height: rem(40px);
            }
            &.is-medium {
                width: rem(44px);
                height: rem(44px);
            }
            &.is-large {
                width: rem(50px);
                height: rem(50px);
            }
        }
        &[inactive] {
            &,
            &:active,
            &:focus,
            &:hover {
                cursor: default;
                pointer-events: none;
                box-shadow: 0 0 0 transparent;
            }
        }
    }
    
    #{$name-buttons-module} {
        display: flex;
        flex-wrap: wrap;
        &.#{$class-addons} {
            flex-wrap: nowrap;
            &,
            &.#{$class-rounded} {
                * {
                    border-radius: 0;
                    margin-right: -1px;
                }
            }
             :first-child {
                border-top-left-radius: $button-border-radius;
                border-bottom-left-radius: $button-border-radius;
            }
             :last-child {
                border-top-right-radius: $button-border-radius;
                border-bottom-right-radius: $button-border-radius;
            }
            &.#{$class-rounded} {
                 :first-child {
                    border-top-left-radius: $button-circle;
                    border-bottom-left-radius: $button-circle;
                }
                 :last-child {
                    border-top-right-radius: $button-circle;
                    border-bottom-right-radius: $button-circle;
                }
            }
        }
        &:not(.#{$class-addons}) {
            #{$name-button-module},
            .#{$name-button-module} {
                margin: .2rem;
            }
        }
    }
    
    #{$name-fab-module} {
        display: inline-flex;
        position: relative;
        align-items: center;
        justify-content: center;
        z-index: 100;
        #{$name-fabmenu-module} {
            display: none;
            flex-direction: column;
            &.#{$class-visible} {
                display: flex;
                position: absolute;
            }
            &>* {
                margin: rem(5px);
                animation: zoom-in .2s;
            }
            &.#{$class-left},
            &.#{$class-right} {
                flex-direction: row;
            }
            &.#{$class-left} {
                right: $button-floating-position;
            }
            &.#{$class-right} {
                left: $button-floating-position;
            }
            &.#{$class-up} {
                bottom: $button-floating-position;
            }
            &.#{$class-down} {
                top: $button-floating-position;
            }
        }
    }