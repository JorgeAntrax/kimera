// mixin para la generaciÃ³n de media queries

//$touch: '768px';
//$tablet: '769px';
//$desktop: '1024px';
//$widescreen: '1300px';

@mixin since ($breakpoint){
	@if $breakpoint == 'touch' {
		@media screen and (min-width: $touch ){
			@content
		}			
	}	@else if $breakpoint == 'tablet' {
		@media screen and (min-width: $tablet ){
			@content
		}
	} @else if $breakpoint == 'desktop' {
		@media screen and (min-width: $desktop ){
			@content
		}			
	} @else if $breakpoint == 'widescreen' {
		@media screen and (min-width: $widescreen ){
			@content
		}			
	} @else {
		@media screen and (min-width: $breakpoint ){
			@content
		}	
	}
}
//mixin media queries para puntos min & max

@mixin only ($breakpoint1, $breakpoint2: $widescreen){
	@media screen and (min-width: $breakpoint1 ) and (max-width: $breakpoint2 ) {
		@content
	}
}

// mixin para media querie con ancho maximo
@mixin until ($breakpoint){
	@if $breakpoint == 'touch' {
		@media screen and (max-width: $touch ){
			@content
		}			
	}	@else if $breakpoint == 'tablet' {
		@media screen and (max-width: $tablet ){
			@content
		}
	} @else if $breakpoint == 'desktop' {
		@media screen and (max-width: $desktop ){
			@content
		}			
	} @else if $breakpoint == 'widescreen' {
		@media screen and (max-width: $widescreen ){
			@content
		}			
	} @else {
		@media screen and (max-width: $breakpoint ){
			@content
		}	
	}
}

//*****************************************************

//button

@mixin button-theme ($class, $color) {
	&.is-#{$class} {
		&, &-outline:hover {
			background-color: $color;
			@if $class == 'warning' {
				color: $dark;	
			}@else {
				color: $cloud;
			}
		}
		&, &-outline {
			border: 1px solid $color;
		}
		&-invert, &-outline, &-inverse:hover {
			background-color: $cloud;
			@if $class == 'warning' {
				color: darken($color, 20);	
			}@else {
				color: $color;
			}
		}

		&:focus,
		&.focused,
		&-invert:focus,
		&-invert.focused,
		&-outline:focus,
		&-outline.focused &-inverse:focus {
			box-shadow: 0 0 0 2px rgba($color, .4);
		}
	}
}

//funcion palete color

@mixin color-picker ($class, $base-color, $number-colors: 5, $interval-color: 2) {
		.color-#{$class} {
			background-color: $base-color;
			color: $cloud;
		}
		[class^='color-#{$class}'] {
			@if $class == 'warning' {
				color: $dark;
			}@else {
				color: $cloud;
			}
		}
		@for $i from 1 through $number-colors {
			@if ($class == 'black') or ($class =='dark') {} @else {	
				.color-#{$class}-darken-#{$i} {
					background-color: darken($base-color, ($i*$interval-color));
				}
			}
			.color-#{$class}-lighten-#{$i} {
				background-color: lighten($base-color, ($i*$interval-color));
			}
		}
}
//mixin que genera un border con la propiedad box shadow
@mixin border-shadow ($color, $opacity) {
	box-shadow: inset 0 0 0 1px rgba($color, $opacity);
}

//mixin que le da estilo a los input en general
@mixin forms-style ($class, $bg-color) {
	&.is-#{$class} {
		border: 1px solid $bg-color;
		&:focus {
				box-shadow: 0 0 0 2px rgba($bg-color, .5);
			}
		}
	}

//estilos para los checkbox y radio
@mixin radio-check-style ($class, $color) {
	.checkbox, .radio {
		& ~ label.#{$class} {
			//cambia el color de borde de los checbox y radio buttons
			border: 1px solid $color;
		}
		// en estado checked cambia el color de borde y fondo
		&:checked ~ label.#{$class} {
			border-color:$color;
			background-color: $color;
			// modificador que agrega un box shadow interno de color blanco dando otro efecto
			&.outline {
				box-shadow: inset 0 0 0 2px $cloud;
			}
		}
	}
}

//style toogle input
@mixin toogle-button($class, $color){
	&.is-#{$class} {
		// este codigo cambia los colores del toggle cuando esta en estado checked
		& > :checked + label { 
			background-color: rgba($color, .2);
			&::before {
				background-color: $color;
			}
		}
		
	}
}

/*stilos para input range de color*/
@mixin color-input-range($class, $color){
	.range.#{$class} {
		background-color: rgba($color, .5);
		&:before {
			background-color: $color;
		}
	}
}

// mixin para estilo de notication
@mixin message-style($class, $color){
	&.is-#{$class} {
		background-color: $cloud;
		border-color: $color;
		message_head {
			background-color: $color;
			@if $class == 'warning' {
				color:$dark;
			}@else {
				color: $cloud;
			}
		}
		message_content {	
			background-color: rgba($color, .05);
			color:darken($color, 15);
		}
	}
}